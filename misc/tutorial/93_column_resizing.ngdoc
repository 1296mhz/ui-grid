@ngdoc overview
@name Tutorial: Column Resizing
@description

You can add column resizing by including the `ui.grid.resizeColumns` feature module in your application's dependencies.
<pre>
angular.module('yourApp', ['ui.grid', 'ui.grid.resizeColumns']);
</pre>

Also, you must add the directive to your grid element.  We do this so that you can have several grids on a
page and only pay the resizing overhead if the grid is actually using resizing.
<pre>
<div ui-grid="gridOptions" class="grid" ui-grid-resize-columns></div>
</pre>
<br>
<br>
The `enableColumnResizing` option on your grid will enable resizing and turn it on for all columns by default.
<pre>
$scope.gridOptions = {
  enableColumnResizing: true
};
</pre>
<br>
<br>
You can disable it on a column by setting the `enableColumnResizing` property to false in its column definition.
<pre>
$scope.gridOptions = {
  enableColumnResizing: true,
  columnDefs: [
    { field: 'name' },
    { field: 'gender', enableColumnResizing: false },
    { field: 'company' }
  ]
};
</pre>

@example
<example module="app">
  <file name="app.js">
    var app = angular.module('app', ['ui.grid', 'ui.grid.resizeColumns']);

    app.controller('MainCtrl', ['$scope', '$http', function ($scope, $http) {
      $scope.gridOptions = {
        enableColumnResizing: true,
        enableSorting: true,
        columnDefs: [
          { field: 'name', minWidth: 200, width: '50%' },
          { field: 'gender', width: '30%', enableColumnResizing: false },
          { field: 'company', width: '20%' }
        ]
      };

      $http.get('/data/100.json')
        .success(function(data) {
          $scope.gridOptions.data = data;
        });
    }]);
  </file>
  <file name="index.html">
    <div ng-controller="MainCtrl">
      <strong>Drag</strong> a the column separator to resize; <strong>double-click</strong> to size according to rendered column contents.
      <br>
      <br>
      The column will obey any <i>minWidth</i> or <i>maxWidth</i> constraints you give it.
      <br>
      <br>
      <div ui-grid="gridOptions" class="grid" ui-grid-resize-columns></div>
    </div>
  </file>
  <file name="main.css">
    .grid {
      width: 500px;
      height: 400px;
    }
  </file>
</example>